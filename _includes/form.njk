<section id="{{form_id}}" class="text-center">
    <h2>{{form_title}}</h2>
    <p>{{form_message}}</p>
    <form class="form-group">
      <div class="mb-3">
        <label for="name">Name / Organization:</label>
        <input type="text" class="form-control" id="name" name="name" required>
      </div>
      <div class="mb-3">
        <label for="phone">Phone Number:</label>
        <input type="tel" class="form-control" id="phone" name="phone">
      </div>
      <div class="mb-3">
        <label for="email">Email:</label>
        <input type="email" class="form-control" id="email" name="email" required>
      </div>
      <div class="mb-3">
        <label for="comment">Comment:</label>
        <textarea class="form-control" id="comment" name="comment"></textarea>
      </div>
      <!-- Honeypot -->
      <div style="display:none;">
        <label for="website">Leave this field empty</label>
        <input type="text" id="website" name="website">
      </div>
      <button type="submit" class="btn btn-primary mt-3">Submit</button>
    </form>
  </section>
  
  <script type="module">
    import validator from "https://cdn.jsdelivr.net/npm/validator@13.11.0/+esm";
  
    document.addEventListener("DOMContentLoaded", function () {
      const form = document.querySelector("#{{form_id}} form");
  
      form.addEventListener("submit", function (e) {
        e.preventDefault();
  
        // Grab values
        const name = form.querySelector("#name").value.trim();
        const phone = form.querySelector("#phone").value.trim();
        const email = form.querySelector("#email").value.trim();
        const comment = form.querySelector("#comment").value.trim();
  
        // Remove old message if any
        const oldMsg = form.parentElement.querySelector(".form-message");
        if (oldMsg) oldMsg.remove();
  
        // Validate
        let errors = [];
        if (validator.isEmpty(name)) errors.push("Name is required.");
        if (!validator.isEmail(email)) errors.push("Valid email is required.");
        if (validator.isEmpty(phone)) {
          errors.push("Phone number is required.");
        } else if (!validator.isMobilePhone(phone, "any")) {
          errors.push("Valid phone number is required.");
        }
        if (validator.isEmpty(comment)) errors.push("Comment is required.");
  
        if (errors.length > 0) {
          const msg = document.createElement("div");
          msg.className = "form-message alert alert-danger mt-4";
          msg.innerHTML = "❌ Please fix the following:<br>" + errors.join("<br>");
          form.parentElement.appendChild(msg);
          return; // stop here, don’t fake submit
        }
  
        // Disable button + show "sending..."
        const button = form.querySelector("button[type=submit]");
        button.disabled = true;
        button.textContent = "Sending...";
  
        // Fake async request
        setTimeout(() => {
          const success = Math.random() > 0.3;
  
          // Restore button state
          button.disabled = false;
          button.textContent = "Submit";
  
          // Remove old message if any
          const oldMsg = form.parentElement.querySelector(".form-message");
          if (oldMsg) oldMsg.remove();
  
          // Create alert box
          const msg = document.createElement("div");
          msg.className = `form-message alert mt-4 ${
            success ? "alert-success" : "alert-danger"
          }`;
          msg.textContent = success
            ? "✅ Your message was sent successfully!"
            : "❌ Something went wrong. Please try again.";
  
          if (success) {
            form.style.display = "none";
          }
  
          form.parentElement.appendChild(msg);
        }, 1000);
      });
    });
  </script>
  
  
  